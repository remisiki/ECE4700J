1. Both should be log2(SIZE)-bit, which is 3 if buffer size is 8.
2. head is initialized to 0 and tail to 7. When enqueuing, head is set to (head + 1) mod 8; When dequeuing, tail is set to (tail + 1) mod 8. There are two ways to tell whether the queue is empty or full. a) Set a size count, increment by 1 at enqueue and decrement at dequeue. Then size == 0 means empty and size == 7 means full. b) Set a may-be-empty bit initialized to 1. This bit is set to 0 at enqueue and back to 1 at dequeue. Then if head == (tail + 1) mod 8, the queue is empty when may-be-empty is high and is full when may-be-empty is low.
3. Yes, since the buffer read and write needs time, the pointer operation should be in sequential logic to provide enough time for data read/write and to prevent read/write two values in the same clock cycle.